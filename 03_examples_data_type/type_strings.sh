#!/bin/bash
# @author: hoojo
# @email: hoojo_@126.com
# @github: https://github.com/hooj0
# @create date: 2018-05-27 18:01:17
# @copyright by hoojo@2018
# @changelog Added python3 `data type->type strings` example



# =====================================================================
# 		Shell 字符串
# =====================================================================

#----------------------------------------------------------------------
# 字符串是shell编程中最常用最有用的数据类型，字符串可以用单引号，也可以用双引号，也可以不用引号。
#----------------------------------------------------------------------
# 单引号字符串的限制：
#
# 单引号里的任何字符都会原样输出，单引号字符串中的变量是无效的；
# 单引号字串中不能出现单引号（对单引号使用转义符也不行）。
#-----------------------------------
# 双引号的优点：
#
# 双引号里可以有变量
# 双引号里可以出现转义字符
#----------------------------------------------------------------------


# 单引号
# ---------------------------------------------------------------------
str='this is a string'
echo $str

# 原样输出，表达式和转义字符无效
# ---------------------------------------------------------------------
str='this is a string $str \"s'
echo $str

# 双引号
# ---------------------------------------------------------------------
your_name='jack'
str="Hello, I know you are \"$your_name\"! \n line" # 并沒有換行
echo $str

# 拼接字符串
# ---------------------------------------------------------------------
your_name="jason"
greeting="hello, "$your_name" !"
greeting_1="hello, ${your_name} !"

echo $greeting $greeting_1

# 获取字符串长度
# ---------------------------------------------------------------------
string="abcd"
echo ${#string} # 输出 4

string="hello,everyone my name is xiaoming"
expr length "$string" # 34

# 提取子字符串
# ---------------------------------------------------------------------
# 以下实例从字符串第 2 个字符开始截取 4 个字符：
string="shell is a great site"
echo ${string:1:4} # 输出 hell

# 查找子字符串
# ---------------------------------------------------------------------
# 查找字符 "i 或 s" 的位置：
string="shell is a great company"
echo `expr index "$string" is`

# 注意： 以上脚本中 "`" 是反引号，而不是单引号 "'"



# 字符串自动组合
# ---------------------------------------------------------------------
echo file{.txt,.bak,.sh}