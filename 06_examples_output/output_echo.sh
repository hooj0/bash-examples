#!/bin/bash
# @author: hoojo
# @email: hoojo_@126.com
# @github: https://github.com/hooj0
# @create date: 2018-05-30 20:59:40
# @copyright by hoojo@2018
# @changelog Added bash `output -> echo` example


# ==========================================================================
#					Shell echo命令
# ==========================================================================
# Shell 的 echo 指令用于字符串的输出。
#
# 命令格式：
# 		echo string
#
# 	echo -e 开启转义
# 	echo -n 不换行
#
# 可以使用echo实现更复杂的输出格式控制
# --------------------------------------------------------------------------
# echo输出的字符串总结
# ==========================================================================
# 	 	   | 能否引用变量     |  能否引用转移符   |  能否引用文本格式符(如：换行符、制表符)
# 	单引号  |      否        |     否          |     否
# 	双引号  |      能        |     能          |     能
# 	无引号  |      能        |     能          |     否
# ===================================================================





# 1.显示普通字符串:
#---------------------------------------------------------------------
echo "It is a test"

# 这里的双引号完全可以省略，以下命令与上面实例效果一致：
# echo It is a test



# 2.显示转义字符
#---------------------------------------------------------------------
echo "\"It is a test\""

# 结果将是:
# "It is a test"
# 同样，双引号也可以省略



# 3.显示变量
#---------------------------------------------------------------------
# read 命令从标准输入中读取一行,并把输入行的每个字段的值指定给 shell 变量

read name 
echo "$name It is a test"

# 以上代码保存为 test.sh，name 接收标准输入的变量，结果将是:

# [root@www ~]# sh test.sh
# OK                     #标准输入
# OK It is a test        #输出



# 4.显示换行
#---------------------------------------------------------------------
echo -e "OK! \n" # -e 开启转义
echo "It it a test"

# 输出结果：
# OK!

# It it a test



# 5.显示不换行
#---------------------------------------------------------------------
echo -e "OK! \c" # -e 开启转义 \c 不换行
echo "It is a test"


# 输出结果：
# OK! It is a test



# 6.显示结果定向至文件，将内容写入到文件
#---------------------------------------------------------------------
echo "It is a test" > myfile



# 7.单引号原样输出字符串，不进行转义或取变量(用单引号)
#---------------------------------------------------------------------
echo '$name\"'

# 输出结果：
# $name\"



# 8.显示命令执行结果
#---------------------------------------------------------------------
echo `date`

# `` 可以将命令运行在 echo 中
echo `ls .`

#注意： 这里使用的是反引号 `, 而不是单引号 '。
# 结果将显示当前日期

# Thu Jul 24 10:08:46 CST 2014

echo  "这是普通的一行语句"
echo -n "这是一行不换行的语句"
echo  "这是普通的一行语句"

echo "按 Enter 键退出"
read a