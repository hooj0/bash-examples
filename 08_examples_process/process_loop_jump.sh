#!/bin/bash
# @author: hoojo
# @email: hoojo_@126.com
# @github: https://github.com/hooj0
# @create date: 2018-06-05 20:52:49
# @copyright by hoojo@2018
# @changelog Added bash `process -> loop jump` example



# ======================================================================
#       流程语句———— 跳出循环
# ======================================================================
# 在循环过程中，有时候需要在未达到循环结束条件时强制跳出循环，
# Shell使用两个命令来实现该功能：break和continue
# ----------------------------------------------------------------------
# break命令
# break命令允许跳出所有循环（终止执行后面的所有循环）
# ----------------------------------------------------------------------
# continue 忽略后续语句
# continue命令与break命令类似，只有一点差别，它不会跳出所有循环，仅仅跳出当前循环
# ----------------------------------------------------------------------


# ======================================================================
# 示例：脚本进入死循环直至用户输入数字大于5
# 要跳出这个循环，返回到shell提示符下，需要使用break命令
# ======================================================================
while :
do
    echo -n "输入 1 到 5 之间的数字:"
    read aNum
    case $aNum in
        1|2|3|4|5) 
        	echo "你输入的数字为 $aNum!"
        ;;
        *) 
        	echo "你输入的数字不是 1 到 5 之间的! 游戏结束"
            break
        ;;
    esac
done


# output：
# ----------------------------------------------------------------------
#
# 输入 1 到 5 之间的数字:3
# 你输入的数字为 3!
# 输入 1 到 5 之间的数字:7
# 你输入的数字不是 1 到 5 之间的! 游戏结束



# ======================================================================
# 示例：continue 忽略后续语句
# ======================================================================
# 对上面的例子进行修改：

while :
do
    echo -n "输入 1 到 5 之间的数字: "
    read aNum
    case $aNum in
        1|2|3|4|5) 
        	echo "你输入的数字为 $aNum!"
        ;;
        
        *) 
        	echo "你输入的数字不是 1 到 5 之间的!"
            continue
            echo "游戏结束"
        ;;
    esac
done


# 运行代码发现，当输入大于5的数字时，该例中的循环不会结束，语句 echo "游戏结束" 永远不会被执行。
# ----------------------------------------------------------------------
# 	esac
# ----------------------------------------------------------------------
# case的语法和Java family语言差别很大，
# 它需要一个esac（就是case反过来）作为结束标记，
# 每个case分支用右圆括号，用两个分号表示break。