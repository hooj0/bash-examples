#!/bin/bash
# @author: hoojo
# @email: hoojo_@126.com
# @github: https://github.com/hooj0
# @create date: 2018-06-03 09:13:52
# @copyright by hoojo@2018
# @changelog Added bash `process -> for` example



# ======================================================================
#					流程语句 ———— for 循环
# ======================================================================
# 与其他编程语言类似，Shell支持for循环
# ----------------------------------------------------------------------
# for循环一般格式为：
# ----------------------------------------------------------------------
# for var in item1 item2 ... itemN
# do
#    command1
#    command2
#    ...
#    commandN
# done
# ----------------------------------------------------------------------
# for((assignment;condition:next));do
#    command_1;
#    command_2;
#    commond_..;
# done;
# ----------------------------------------------------------------------
# 写成一行：
# ----------------------------------------------------------------------
# for var in item1 item2 ... itemN; do command1; command2… done;
# 当变量值在列表里，for循环即执行一次所有命令，使用变量名获取列表中的当前取值。
# 命令可为任何有效的shell命令和语句。
# 
# in列表可以包含替换、字符串和文件名。
# in列表是可选的，如果不用它，for循环使用命令行的位置参数。
# ----------------------------------------------------------------------




# ======================================================================
# 示例：顺序输出当前列表中的数字
# ======================================================================

for loop in 1 2 3 4 5
do
    echo "The value is: $loop"
done

# output：
# ----------------------------------------------------------------------
# The value is: 1
# The value is: 2
# The value is: 3
# The value is: 4
# The value is: 5



# ======================================================================
# 示例：顺序输出字符串中的字符
# ======================================================================
for str in 'This is a string'
do
    echo "$str\t"
done

# 每个空格代表一个元素
for str in This is a string
do
    echo "$str\t"
done

# output：
# ----------------------------------------------------------------------
# This is a string
#
# ---------------
# This\t
# is\t
# a\t
# string\t


# ======================================================================
# 示例：语法相似于 C 语言中的 for 语法格式，带有步长和循环体的流程语句
# ======================================================================
for ((i=1; i <= 5; i++)); do
    echo "这是第 $i 次调用"
done

# output：
# ----------------------------------------------------------------------
# 这是第1次调用
# 这是第2次调用
# 这是第3次调用
# 这是第4次调用
# 这是第5次调用



# ======================================================================
# 示例：通配符表达式循环
# ======================================================================
for i in {A..D}; do echo $i; done

# 通配符路径展开
for i in distros*.txt; do echo $i; done



# ======================================================================
# 示例：在一个文件中查找最长的字符串
# 使用 strings 程序，为每一个文件产生一个可读的文本格式的 “words” 列表。
# 然后这个 for 循环依次处理每个单词，判断当前这个单词是否为目前为止找到的最长的一个。
# 当循环结束的时候，显示出最长的单词
# ======================================================================
while [[ -n $1 ]]; do
    if [[ -r $1 ]]; then
        max_word=
        max_len=0
        for i in $(strings $1); do
            len=$(echo $i | wc -c)
            if (( len > max_len )); then
                max_len=$len
                max_word=$i
            fi
        done
        echo "$1: '$max_word' ($max_len characters)"
    fi
    shift
done