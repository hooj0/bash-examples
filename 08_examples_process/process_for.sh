#!/bin/bash
# @author: hoojo
# @email: hoojo_@126.com
# @github: https://github.com/hooj0
# @create date: 2018-06-03 09:13:52
# @copyright by hoojo@2018
# @changelog Added bash `process->process for` example

# ======================================================================
#					流程语句————for 循环
# ======================================================================
# 与其他编程语言类似，Shell支持for循环。
# ----------------------------------------------------------------------




# for循环一般格式为：
# ----------------------------------------------------------------------
# for var in item1 item2 ... itemN
# do
#    command1
#    command2
#    ...
#    commandN
# done
# ----------------------------------------------------------------------
# for((assignment;condition:next));do
#    command_1;
#    command_2;
#    commond_..;
# done;
# ----------------------------------------------------------------------

# 写成一行：
# ----------------------------------------------------------------------
# for var in item1 item2 ... itemN; do command1; command2… done;

# 当变量值在列表里，for循环即执行一次所有命令，使用变量名获取列表中的当前取值。
# 命令可为任何有效的shell命令和语句。
# 
# in列表可以包含替换、字符串和文件名。
# in列表是可选的，如果不用它，for循环使用命令行的位置参数。
# ----------------------------------------------------------------------




# 例如，顺序输出当前列表中的数字：
# ----------------------------------------------------------------------

for loop in 1 2 3 4 5
do
    echo "The value is: $loop"
done

# 输出结果：
# ----------------------------------------------------------------------

# The value is: 1
# The value is: 2
# The value is: 3
# The value is: 4
# The value is: 5

# 顺序输出字符串中的字符：
# ----------------------------------------------------------------------
for str in 'This is a string'
do
    echo "$str\t"
done

echo '---------------'
# 每个空格代表一个元素
for str in This is a string
do
    echo "$str\t"
done

# 输出结果：
# ----------------------------------------------------------------------
# This is a string

# ---------------
# This\t
# is\t
# a\t
# string\t


for ((i=1;i <= 5; i++)); do
    echo "这是第 $i 次调用"
done

# 执行结果：

# 这是第1次调用
# 这是第2次调用
# 这是第3次调用
# 这是第4次调用
# 这是第5次调用


read status