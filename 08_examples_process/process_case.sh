#!/bin/bash
# @author: hoojo
# @email: hoojo_@126.com
# @github: https://github.com/hooj0
# @create date: 2018-06-04 22:54:41
# @copyright by hoojo@2018
# @changelog Added python3 `process->process case` example

# ======================================================================
#					流程语句———— case
# ======================================================================

# case语句为多选择语句。可以用case语句匹配一个值与一个模式，如果匹配成功，执行相匹配的命令。
# -----------------------------------------------------------------------------
# case语句格式如下：

# case 值 in
# 模式1)
#    command1
#    command2
#    ...
#    commandN
#    ;;
# 模式2)
#    command1
#    command2
#    ...
#    commandN
#   ;;
# esac
# -----------------------------------------------------------------------------

# case工作方式如上所示。取值后面必须为单词in，每一模式必须以右括号结束。
# 取值可以为变量或常数。匹配发现取值符合某一模式后，其间所有命令开始执行直至 ;;。

# 取值将检测匹配的每一个模式。一旦模式匹配，则执行完匹配模式相应命令后不再继续其他模式。
# 如果无一匹配模式，使用星号 * 捕获该值，再执行后面的命令。
# -----------------------------------------------------------------------------

# ----------------------------------------------------------------------
# 	esac
# ----------------------------------------------------------------------
# case的语法和Java family语言差别很大，
# 它需要一个esac（就是case反过来）作为结束标记，
# 每个case分支用右圆括号，用两个分号表示break。

# 下面的脚本提示输入1到4，与每一种模式进行匹配：
# -----------------------------------------------------------------------------

echo '输入 1 到 4 之间的数字:'
echo '你输入的数字为:'
read aNum
case $aNum in
    1)  
    	echo '你选择了 1'
    ;;
    2)  
    	echo '你选择了 2'
    ;;
    3)  
    	echo '你选择了 3'
    ;;
    4)  
    	echo '你选择了 4'
    ;;
    *)  
    	echo '你没有输入 1 到 4 之间的数字'
    ;;
esac

read status

# 输入不同的内容，会有不同的结果，例如：

# 输入 1 到 4 之间的数字:
# 你输入的数字为:
# 3
# 你选择了 3